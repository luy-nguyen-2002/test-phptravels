name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    name: Run Playwright tests on ${{ matrix.browser }}
    runs-on: ubuntu-latest
    timeout-minutes: 90

    strategy:
      fail-fast: false # don't stop all if one browser fails
      matrix:
        browser: [
          "Google Chrome",
          "Microsoft Edge",
          "Apple Safari",
          "Mozilla Firefox",
          "Samsung Internet (Android)",
          "Opera Brave (Chromium)"
        ]
        include:
          - browser: "Google Chrome"
            grep: "@smoke|@positive"
          - browser: "Microsoft Edge"
            grep: "@smoke|@positive"
          - browser: "Apple Safari"
            grep: "@smoke|@positive"
          - browser: "Mozilla Firefox"
            grep: "@smoke|@positive"
          - browser: "Samsung Internet (Android)"
            grep: "@smoke|@positive"
          - browser: "Opera / Brave (Chromium)"
            grep: "@smoke|@positive"

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Load .env.example into environment
        run: |
          if [ -f .env.example ]; then
            echo "Loading from .env.example"
            # Remove CR characters, filter comments, then output each key=value to $GITHUB_ENV
            sed 's/\r$//' .env.example | grep -v '^#' | while IFS='=' read -r key value; do
              # optionally trim quotes/spaces
              echo "${key}=${value}" >> $GITHUB_ENV
            done
          else
            echo "No .env.example file found"
          fi

      - name: Debug environment
        run: |
          echo "BASE_URL is: $BASE_URL"

      - name: Generate BDD Tests (bddgen)
        run: npx bddgen

      - name: Run Playwright Priority Tests (${{ matrix.browser }})
        env:
          CI: "true"
          HEADLESS: "true"
        run: |
          echo "▶️ Running priority tests on ${{ matrix.browser }}"
          npx playwright test --project="${{ matrix.browser }}" \
            --grep "${{ matrix.grep }}" \
            --reporter=list,html,allure-playwright

      - name: Run Remaining Tests (${{ matrix.browser }})
        if: always()
        env:
          CI: "true"
          HEADLESS: "true"
        run: |
          echo "▶️ Running remaining tests on ${{ matrix.browser }}"
          npx playwright test --project="${{ matrix.browser }}" \
            --grep-invert "${{ matrix.grep }}" \
            --reporter=list,html,allure-playwright

      - name: Generate Allure HTML Report
        if: always()
        run: npx allure generate ./allure-results --clean -o allure-report

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.browser }}
          path: allure-report/
          retention-days: 30

      - name: Upload Playwright Report (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 30

      - name: Upload Traces/Videos/Screenshots (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts-${{ matrix.browser }}
          path: |
            test-results/
            traces/
            videos/
          retention-days: 30
